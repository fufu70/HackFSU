<?php

/**
 * This is the model base class for the table "tbl_reservation".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Reservation".
 *
 * Columns in table "tbl_reservation" available as properties of the model,
 * followed by relations of table "tbl_reservation" available as properties of the model.
 *
 * @property integer $reservation_number
 * @property integer $people_id
 * @property integer $secondary_contact_id
 * @property string $beginning_date
 * @property string $beginning_time
 * @property string $reservation_notes
 * @property integer $assistance_needed
 * @property integer $delivery_and_setup
 * @property integer $takedown_needed
 * @property integer $building_id
 * @property string $location_description
 * @property integer $reservation_status_id
 * @property string $closure_notes
 * @property string $end_date
 *
 * @property Log[] $logs
 * @property People $people
 * @property Location $building
 * @property ReservationStatus $reservationStatus
 * @property People $secondaryContact
 * @property ReservationItems[] $reservationItems
 */
abstract class BaseReservation extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_reservation';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Reservation|Reservations', $n);
	}

	public static function representingColumn() {
		return 'beginning_date';
	}

	public function rules() {
		return array(
			array('people_id, secondary_contact_id, building_id, reservation_status_id', 'required'),
			array('people_id, secondary_contact_id, assistance_needed, delivery_and_setup, takedown_needed, building_id, reservation_status_id', 'numerical', 'integerOnly'=>true),
			array('reservation_notes, closure_notes', 'length', 'max'=>255),
			array('location_description', 'length', 'max'=>80),
			array('beginning_date, beginning_time, end_date', 'safe'),
			array('beginning_date, beginning_time, reservation_notes, assistance_needed, delivery_and_setup, takedown_needed, location_description, closure_notes, end_date', 'default', 'setOnEmpty' => true, 'value' => null),
			array('reservation_number, people_id, secondary_contact_id, beginning_date, beginning_time, reservation_notes, assistance_needed, delivery_and_setup, takedown_needed, building_id, location_description, reservation_status_id, closure_notes, end_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'logs' => array(self::HAS_MANY, 'Log', 'reservation_number'),
			'people' => array(self::BELONGS_TO, 'People', 'people_id'),
			'building' => array(self::BELONGS_TO, 'Location', 'building_id'),
			'reservationStatus' => array(self::BELONGS_TO, 'ReservationStatus', 'reservation_status_id'),
			'secondaryContact' => array(self::BELONGS_TO, 'People', 'secondary_contact_id'),
			'reservationItems' => array(self::HAS_MANY, 'ReservationItems', 'reservation_number'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'reservation_number' => Yii::t('app', 'Reservation Number'),
			'people_id' => null,
			'secondary_contact_id' => null,
			'beginning_date' => Yii::t('app', 'Beginning Date'),
			'beginning_time' => Yii::t('app', 'Beginning Time'),
			'reservation_notes' => Yii::t('app', 'Reservation Notes'),
			'assistance_needed' => Yii::t('app', 'Assistance Needed'),
			'delivery_and_setup' => Yii::t('app', 'Delivery And Setup'),
			'takedown_needed' => Yii::t('app', 'Takedown Needed'),
			'building_id' => null,
			'location_description' => Yii::t('app', 'Location Description'),
			'reservation_status_id' => null,
			'closure_notes' => Yii::t('app', 'Closure Notes'),
			'end_date' => Yii::t('app', 'End Date'),
			'logs' => null,
			'people' => null,
			'building' => null,
			'reservationStatus' => null,
			'secondaryContact' => null,
			'reservationItems' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('reservation_number', $this->reservation_number);
		$criteria->compare('people_id', $this->people_id);
		$criteria->compare('secondary_contact_id', $this->secondary_contact_id);
		$criteria->compare('beginning_date', $this->beginning_date, true);
		$criteria->compare('beginning_time', $this->beginning_time, true);
		$criteria->compare('reservation_notes', $this->reservation_notes, true);
		$criteria->compare('assistance_needed', $this->assistance_needed);
		$criteria->compare('delivery_and_setup', $this->delivery_and_setup);
		$criteria->compare('takedown_needed', $this->takedown_needed);
		$criteria->compare('building_id', $this->building_id);
		$criteria->compare('location_description', $this->location_description, true);
		$criteria->compare('reservation_status_id', $this->reservation_status_id);
		$criteria->compare('closure_notes', $this->closure_notes, true);
		$criteria->compare('end_date', $this->end_date, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}